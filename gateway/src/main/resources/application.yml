spring:
  application:
    name: cloud_platform-gateway
    # spring cloud gateway 路由配置方式
  cloud:
    gateway:
      #是否与服务发现组件进行结合，通过 serviceId(必须设置成大写) 转发到具体的服务实例。默认为false，设为true便开启通过服务中心的自动根据 serviceId 创建路由的功能。
      discovery:
        #路由访问方式：http://Gateway_HOST:Gateway_PORT/大写的serviceId/**，其中微服务应用名默认大写访问。
        locator:
          enabled: true
          #修改默认路由方式serviceId为小写
          lower-case-service-id: true
      routes:
        #自定义id，不指定会默认uuid
      - id: eureka-client-a
        #predicates匹配后转发服务 默认大写，设置lower-case-service-id后可以改为小写
        uri: lb://eureka-client-a
        #符合如下配置的地址会被该routes拦截 并转发到上面配置的uri
        predicates:
        - Path=/api/client/**
        #StripPrefix的值代表匹配转发的实际路径需要除去几个前缀，配置2意味着跳转路径从/api/client/testa变成了testa,转发路径即：lb://EUREKA-CLIENT-A/testa
        filters:
        - StripPrefix=2
      default-filters:
server:
  port: ${SERVER_PORT:9000}
logging:
  level:
    com: debug
eureka:
  instance:
    hostname: peer1
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://peer1:8000/eureka/,http://peer2:8001/eureka/}

  #prefix: 'api'
#设置全局超时时间 测试微服务rpc调用超时 测试单体服务超时
ribbon:
  ReadTimeout: 6000

cloudplatform:
  security:
    oauth2:
      jwtSigningKey: cloud_platform_jwt_signing_key

